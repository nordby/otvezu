# main.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–µ–¥–∏—Ä–æ–≤–∞–Ω–∏—è

import asyncio
import threading
import time
import os
import sys
import logging
from datetime import datetime
from telegram_bot import ExpeditionBot


# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
from database import DatabaseManager
from telegram_bot import ExpeditionBot
from web_app import app, create_templates

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–º–ø–æ—Ä—Ç Google Calendar
try:
    from google_calendar import CalendarIntegration, print_setup_instructions
    GOOGLE_CALENDAR_AVAILABLE = True
except ImportError:
    GOOGLE_CALENDAR_AVAILABLE = False
    print("‚ö†Ô∏è Google Calendar –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏
    class CalendarIntegration:
        def __init__(self, enabled=False):
            self.enabled = False
    
    def print_setup_instructions():
        print("üìã –ù–ê–°–¢–†–û–ô–ö–ê GOOGLE CALENDAR:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Google Cloud Console")
        print("3. –í–∫–ª—é—á–∏—Ç–µ Google Calendar API")
        print("4. –°–æ–∑–¥–∞–π—Ç–µ OAuth 2.0 credentials")
        print("5. –°–∫–∞—á–∞–π—Ç–µ credentials.json")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('expedition_system.log', encoding='utf-8'),
        logging.StreamHandler(sys.stdout)
    ]
)

logger = logging.getLogger(__name__)

class ExpeditionSystem:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–µ–¥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    def __init__(self):
        self.db_manager = None
        self.telegram_bot = None
        self.calendar_integration = None
        self.web_app_process = None
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.telegram_token = os.getenv("TELEGRAM_BOT_TOKEN")
        self.web_host = os.getenv("WEB_HOST", "0.0.0.0")
        self.web_port = int(os.getenv("WEB_PORT", "8000"))
        self.google_calendar_enabled = os.getenv("GOOGLE_CALENDAR_ENABLED", "true").lower() == "true"
        
    def initialize_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        logger.info("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        try:
            self.db_manager = DatabaseManager()
            logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
    
    def initialize_calendar(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Google Calendar"""
        logger.info("üìÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Calendar...")
        try:
            if GOOGLE_CALENDAR_AVAILABLE:
                self.calendar_integration = CalendarIntegration(enabled=self.google_calendar_enabled)
                if self.calendar_integration.enabled:
                    logger.info("‚úÖ Google Calendar –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
                else:
                    logger.warning("‚ö†Ô∏è Google Calendar –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞")
            else:
                logger.warning("‚ö†Ô∏è Google Calendar API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                self.calendar_integration = CalendarIntegration(enabled=False)
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Calendar: {e}")
            self.calendar_integration = CalendarIntegration(enabled=False)
            return False
    
    def initialize_telegram_bot(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞"""
        if not self.telegram_token or self.telegram_token == "YOUR_BOT_TOKEN_HERE":
            logger.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞!")
            logger.info("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN")
            logger.info("üí° –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ —É @BotFather –≤ Telegram")
            return False
        
        logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞...")
        try:
            self.telegram_bot = ExpeditionBot(self.telegram_token, self.db_manager)
            logger.info("‚úÖ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞: {e}")
            return False
    
    def create_sample_data(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
            users = self.db_manager.get_all_users()
            vehicles = self.db_manager.get_active_vehicles()
            routes = self.db_manager.get_active_routes()
            
            if len(users) > 1:  # –ë–æ–ª—å—à–µ —á–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω
                logger.info("‚ÑπÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
                return True
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª–µ–π
            logger.info("üë• –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π...")
            driver1_id = self.db_manager.create_user("–ò–≤–∞–Ω–æ–≤", "–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤–∏—á", "driver")
            driver2_id = self.db_manager.create_user("–ü–µ—Ç—Ä–æ–≤", "–ü–µ—Ç—Ä", "–ü–µ—Ç—Ä–æ–≤–∏—á", "driver")
            driver3_id = self.db_manager.create_user("–°–∏–¥–æ—Ä–æ–≤", "–°–∏–¥–æ—Ä", "–°–∏–¥–æ—Ä–æ–≤–∏—á", "driver")
            
            # –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
            logger.info("üöõ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∞–≤—Ç–æ–ø–∞—Ä–∫–∞...")
            vehicle1_id = self.db_manager.create_vehicle("9745", "–ì–ê–ó–µ–ª—å Next", 1.5)
            vehicle2_id = self.db_manager.create_vehicle("8621", "Ford Transit", 2.0)
            vehicle3_id = self.db_manager.create_vehicle("7432", "Mercedes Sprinter", 3.5)
            vehicle4_id = self.db_manager.create_vehicle("6159", "–ú–ê–ó-4371", 5.0)
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
            logger.info("üó∫Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤...")
            route1_id = self.db_manager.create_route("13", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω", 2500.0, "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞")
            route2_id = self.db_manager.create_route("7", "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –∑–æ–Ω–∞", 3200.0, "–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è")
            route3_id = self.db_manager.create_route("25", "–ü—Ä–∏–≥–æ—Ä–æ–¥", 4100.0, "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ø—Ä–∏–≥–æ—Ä–æ–¥–Ω—ã–µ —Ä–∞–π–æ–Ω—ã")
            route4_id = self.db_manager.create_route("8", "–¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã", 2800.0, "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –¢–¶ –∏ –º–∞–≥–∞–∑–∏–Ω—ã")
            route5_id = self.db_manager.create_route("14", "–ñ–∏–ª—ã–µ —Ä–∞–π–æ–Ω—ã", 2200.0, "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Å–ø–∞–ª—å–Ω—ã–µ —Ä–∞–π–æ–Ω—ã")
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ–π—Å–æ–≤
            logger.info("üöö –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ–π—Å–æ–≤...")
            from datetime import date, timedelta
            
            today = date.today()
            yesterday = today - timedelta(days=1)
            two_days_ago = today - timedelta(days=2)
            
            # –†–µ–π—Å—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            self.db_manager.create_trip(driver1_id, vehicle1_id, route1_id, "19036101", 1558, today)
            self.db_manager.create_trip(driver2_id, vehicle2_id, route2_id, "19036102", 2340, today)
            self.db_manager.create_trip(driver3_id, vehicle3_id, route3_id, "19036103", 950, today)
            
            # –†–µ–π—Å—ã –∑–∞ –≤—á–µ—Ä–∞
            self.db_manager.create_trip(driver1_id, vehicle2_id, route4_id, "19036098", 1890, yesterday)
            self.db_manager.create_trip(driver2_id, vehicle1_id, route1_id, "19036099", 2100, yesterday)
            self.db_manager.create_trip(driver3_id, vehicle4_id, route5_id, "19036100", 3200, yesterday)
            
            # –†–µ–π—Å—ã –ø–æ–∑–∞–≤—á–µ—Ä–∞
            self.db_manager.create_trip(driver1_id, vehicle3_id, route2_id, "19036095", 1750, two_days_ago)
            self.db_manager.create_trip(driver2_id, vehicle4_id, route3_id, "19036096", 2850, two_days_ago)
            self.db_manager.create_trip(driver3_id, vehicle1_id, route4_id, "19036097", 1620, two_days_ago)
            
            logger.info("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            return False
    
    def run_web_app(self):
        """–ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        import uvicorn
        
        logger.info(f"üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ {self.web_host}:{self.web_port}...")
        
        try:
            uvicorn.run(
                app,
                host=self.web_host,
                port=self.web_port,
                log_level="info",
                access_log=True
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
    
    async def run_telegram_bot(self):
        """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
        if not self.telegram_bot:
            logger.error("‚ùå Telegram –±–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return
        
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        logger.info(f"üîç –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {type(self.telegram_bot)}")
        logger.info(f"üîç –ú–µ—Ç–æ–¥—ã –æ–±—ä–µ–∫—Ç–∞: {[method for method in dir(self.telegram_bot) if not method.startswith('_')]}")
        
        try:
            if hasattr(self.telegram_bot, 'start_polling'):
                await self.telegram_bot.start_polling()
            else:
                logger.error("‚ùå –£ –æ–±—ä–µ–∫—Ç–∞ ExpeditionBot –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ start_polling")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞: {e}")
    
    def print_startup_info(self):
        """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã"""
        print("\n" + "="*60)
        print("üöõ –°–ò–°–¢–ï–ú–ê –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò –≠–ö–°–ü–ï–î–ò–†–û–í–ê–ù–ò–Ø")
        print("="*60)
        print(f"üìÖ –ó–∞–ø—É—Å–∫: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        print(f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:{self.web_port}")
        print(f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / admin123")
        print(f"ü§ñ Telegram –±–æ—Ç: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if self.telegram_bot else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}")
        print(f"üìÖ Google Calendar: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if self.calendar_integration and self.calendar_integration.enabled else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}")
        print("="*60)
        
        if not self.telegram_bot:
            print("‚ö†Ô∏è –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞:")
            print("   1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —É @BotFather")
            print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É")
            print()
        
        if not (self.calendar_integration and self.calendar_integration.enabled):
            print("‚ö†Ô∏è –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Google Calendar:")
            if not GOOGLE_CALENDAR_AVAILABLE:
                print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client")
                print("   2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google Cloud Console")
                print("   3. –°–∫–∞—á–∞–π—Ç–µ credentials.json")
                print("   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python google_calendar.py --setup")
            else:
                print("   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Google Cloud Console")
                print("   2. –°–∫–∞—á–∞–π—Ç–µ credentials.json")
                print("   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python google_calendar.py --setup")
            print()
        
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   ‚Ä¢ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –æ—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ")
        print("   ‚Ä¢ Telegram –±–æ—Ç: –Ω–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")
        print("   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C")
        print("="*60)
    
    async def run_system(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–µ–¥–∏—Ä–æ–≤–∞–Ω–∏—è...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if not self.initialize_database():
            logger.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        self.initialize_calendar()
        
        telegram_ready = self.initialize_telegram_bot()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        self.create_sample_data()
        
        # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ
        self.print_startup_info()
        
        # –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        web_thread = threading.Thread(
            target=self.run_web_app,
            daemon=True,
            name="WebAppThread"
        )
        web_thread.start()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        await asyncio.sleep(2)
        
        # –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        if telegram_ready:
            try:
                await self.run_telegram_bot()
            except KeyboardInterrupt:
                logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã Telegram –±–æ—Ç–∞: {e}")
        else:
            logger.info("‚è≥ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º")
            logger.info("üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
            
            # –û–∂–∏–¥–∞–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            try:
                while True:
                    await asyncio.sleep(1)
            except KeyboardInterrupt:
                logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        logger.info("üì¥ –°–∏—Å—Ç–µ–º–∞ —ç–∫—Å–ø–µ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = {
        'fastapi': 'FastAPI –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫',
        'uvicorn': 'ASGI —Å–µ—Ä–≤–µ—Ä –¥–ª—è FastAPI',
        'jinja2': '–®–∞–±–ª–æ–Ω–∏–∑–∞—Ç–æ—Ä –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞',
        'python-multipart': '–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º –≤ FastAPI',
        'aiogram': 'Telegram Bot API',
        'openpyxl': '–†–∞–±–æ—Ç–∞ —Å Excel —Ñ–∞–π–ª–∞–º–∏',
        'aiofiles': '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏'
    }
    
    optional_packages = {
        'google-auth': 'Google Calendar –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
        'google-auth-oauthlib': 'OAuth –¥–ª—è Google API',
        'google-auth-httplib2': 'HTTP –∫–ª–∏–µ–Ω—Ç –¥–ª—è Google API',
        'google-api-python-client': 'Google API –∫–ª–∏–µ–Ω—Ç'
    }
    
    missing_required = []
    missing_optional = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    for package, description in required_packages.items():
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            missing_required.append((package, description))
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    for package, description in optional_packages.items():
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            missing_optional.append((package, description))
    
    if missing_required:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        for package, description in missing_required:
            print(f"   ‚Ä¢ {package}: {description}")
        print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π:")
        print(f"   pip install {' '.join([p[0] for p in missing_required])}")
        return False
    
    if missing_optional:
        print("‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
        for package, description in missing_optional:
            print(f"   ‚Ä¢ {package}: {description}")
        print("\nüì¶ –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:")
        print(f"   pip install {' '.join([p[0] for p in missing_optional])}")
    
    return True

def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    env_content = """# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–µ–¥–∏—Ä–æ–≤–∞–Ω–∏—è

# –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
TELEGRAM_BOT_TOKEN=YOUR_BOT_TOKEN_HERE

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
WEB_HOST=0.0.0.0
WEB_PORT=8000

# Google Calendar –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è (true/false)
GOOGLE_CALENDAR_ENABLED=true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASE_PATH=expedition.db

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL=INFO
LOG_FILE=expedition_system.log
"""
    
    if not os.path.exists('.env'):
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        print("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
    else:
        print("‚ÑπÔ∏è –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def load_env_file():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists('.env'):
        with open('.env', 'r', encoding='utf-8') as f:
            for line in f:
                if line.strip() and not line.startswith('#'):
                    try:
                        key, value = line.strip().split('=', 1)
                        if key not in os.environ:
                            os.environ[key] = value
                    except ValueError:
                        continue

def install_requirements():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    requirements = [
        "fastapi>=0.104.0",
        "uvicorn[standard]>=0.24.0",
        "jinja2>=3.1.0",
        "python-multipart>=0.0.6",
        "aiogram>=3.0.0",
        "openpyxl>=3.1.0",
        "aiofiles>=23.0.0",
        "python-dotenv>=1.0.0"
    ]
    
    optional_requirements = [
        "google-auth>=2.23.0",
        "google-auth-oauthlib>=1.1.0",
        "google-auth-httplib2>=0.1.1",
        "google-api-python-client>=2.100.0"
    ]
    
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    import subprocess
    
    try:
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", "--upgrade", "pip"
        ])
        
        subprocess.check_call([
            sys.executable, "-m", "pip", "install"
        ] + requirements)
        
        print("‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        try:
            subprocess.check_call([
                sys.executable, "-m", "pip", "install"
            ] + optional_requirements)
            print("‚úÖ –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        except subprocess.CalledProcessError:
            print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            print("   Google Calendar –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("üöõ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —ç–∫—Å–ø–µ–¥–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 50)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == "--install":
            print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
            if install_requirements():
                print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
                print("üöÄ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
            return
        
        elif command == "--setup-calendar":
            print_setup_instructions()
            return
        
        elif command == "--create-env":
            create_env_file()
            return
        
        elif command == "--help":
            print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
            print("   python main.py              - –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã")
            print("   python main.py --install    - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
            print("   python main.py --setup-calendar - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Google Calendar")
            print("   python main.py --create-env - –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ .env")
            print("   python main.py --help       - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
            return
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_env_file()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not check_dependencies():
        print("\nüí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py --install")
        print("   –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists('.env'):
        create_env_file()
    
    # –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
    try:
        system = ExpeditionSystem()
        asyncio.run(system.run_system())
    except KeyboardInterrupt:
        logger.info("üõë –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã: {e}")
        logger.exception("–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:")

if __name__ == "__main__":
    main()